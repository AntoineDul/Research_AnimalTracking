from src.modules.MultiTracker import MultiTracker
from src.modules.Mapper import Mapper
from src.modules.Drawer import Drawer
from src import config
import pytest

@pytest.fixture
def sample_paths_cam5():
    # One path from (0.2, 0) to ~(0.2, 1) in global coords
    return [[((1290, 206), 0),((1260, 350), 1),((1230, 500), 2),((1200, 650), 3),((1170, 800), 4),((1140, 950), 5),((1110, 1100), 6),((1080, 1250), 7),((1050, 1400), 8),((1030, 1550), 9), ((1000, 1667), 10)]]

@pytest.fixture
def sample_paths_cam7():
    # Two paths: One from (0.2, 0) to ~(0.2, 1) but only 8 frames, second is static pig at (2, 0)
    return [[((619, 880), 0),((1260, 800), 1),((1230, 720), 2),((1200, 640), 3),((1170, 560), 4),((1140, 480), 5),((1110, 400), 6),((1080, 320), 7)], [((2076, 948), 0), ((2076 ,948), 1), ((2076 ,948), 2), ((2076 ,948), 3), ((2076 ,948), 4), ((2076 ,948), 5), ((2076 ,948), 6), ((2076 ,948), 7), ((2076 ,948), 8), ((2076 ,948), 9), ((2076 ,948), 10)]] 

@pytest.fixture
def sample_paths_cam17():
    # Three paths:One from (0.2, 0) to ~(0.2, 1) but only 8 frames, second is static pig at (2, 0), last is a static pig in a corner (only visible by cam 17)
    return [[((558, 480), 0), ((600, 470), 1), ((650, 460), 2), ((700, 450), 3), ((750, 440), 4), ((800, 430), 5), ((850, 420), 6), ((900, 410), 7), ((950, 400), 8), ((1000, 390), 9), ((1011, 378), 10)], [((600, 1400), 0),((600, 1400), 1),((600, 1400), 2),((600, 1400), 4),((600, 1400), 5),((600, 1400), 6),((600, 1400), 8),((600, 1400), 9)], [((2400, 700), 0),((2400, 700), 1),((2400, 700), 3),((2400, 700), 4),((2400, 700), 5),((2400, 700), 7),((2400, 700), 8),((2400, 700), 10)]]

@pytest.fixture
def raw_paths():
    return  {5: [], 
             6: [[((0.7566263757944107, -0.7902031540870667), 0), ((0.7565879361629486, -0.7894360423088074), 1), ((0.7582986234426499, -0.7917977571487427), 2), ((0.7582215462923051, -0.7902628779411316), 3), ((0.7590194283723831, -0.7902926802635193), 4), ((0.7581829582452775, -0.7894955277442932), 5), ((0.7567033045291901, -0.7917376160621643), 6), ((0.7581058810949326, -0.7879611253738403), 7), ((0.7579517267942429, -0.7848931550979614), 8), ((0.7584529261589051, -0.7948684096336365), 9), ((0.7586844544410706, -0.7994767427444458), 10), ((0.7572808389663697, -0.8032557368278503), 11), ((0.7635729663372041, -0.8173361420631409), 12), ((0.7548490993976593, -0.8023926019668579), 13), ((0.7546955882310867, -0.7993210554122925), 14), ((0.7546955882310867, -0.7993210554122925), 15), ((0.7529101984500886, -0.7954221963882446), 16), ((0.7512572942972183, -0.7305331230163574), 17), ((0.7530107747316361, -0.7656144499778748), 18), ((0.7554265348911285, -0.7504387497901917), 19)]], 
             7: [[((0.8434323072433472, -0.8171765488386155), 0), ((0.8433732390403748, -0.8149452871084214), 1), ((0.8432551026344299, -0.8104838168621064), 2), ((0.8418574929237366, -0.8060748410224915), 3), ((0.8354008793830872, -0.8041001754999161), 4), ((0.8199872970581055, -0.8024823278188706), 5), ((0.8108878135681152, -0.7972665345668793), 6), ((0.8005670309066772, -0.7943311160802842), 7), ((0.7967280745506287, -0.7944837212562561), 8), ((0.8005392551422119, -0.7932171481847764), 9), ((0.8027645349502563, -0.7797547441720963), 10), ((0.8089622855186462, -0.7717140090465546), 11), ((0.812233567237854, -0.7493386977910996), 12), ((0.8054563999176025, -0.7340555638074875), 13), ((0.8016263246536255, -0.7342063397169114), 14), ((0.7978787422180176, -0.7376847732067109), 15), ((0.795297384262085, -0.7366760158538819), 16), ((0.8003772497177124, -0.7353657066822052), 17), ((0.8118675947189331, -0.7349133235216141), 18), ((0.8207747936248779, -0.7334525710344315), 19)], [((2.0129524707794193, -0.6307808285951615), 0), ((2.0156575679779056, -0.6361510562896728), 1), ((2.025057337284088, -0.6368532729148865), 2), ((2.027463765144348, -0.6378491699695588), 3), ((2.027463765144348, -0.6378491699695588), 4), ((2.027388377189636, -0.6367553240060807), 5), ((2.016898143291473, -0.6371960109472276), 6), ((2.0121606755256654, -0.6362979519367218), 7), ((2.0133263063430786, -0.6362490051984787), 8), ((2.0132515835762024, -0.6351551592350007), 9), ((2.0122353982925416, -0.6373918533325196), 10), ((2.0249819493293764, -0.635759482383728), 11), ((2.0273129892349244, -0.6356615889072419), 12), ((2.0273129892349244, -0.6356615889072419), 13), ((2.0249819493293764, -0.635759482383728), 14), ((2.0121606755256654, -0.6362979519367218), 15), ((2.012085952758789, -0.6352041059732437), 16), ((2.0132515835762024, -0.6351551592350007), 17), ((2.0122353982925416, -0.6373918533325196), 18), ((2.0134012508392334, -0.6373429065942765), 19)], [((2.1639090895652773, -0.44710223436355595), 0), ((2.167454762458801, -0.4480385139584542), 1), ((2.171000657081604, -0.448974848985672), 2), ((2.1768569707870484, -0.4498170599341393), 3), ((2.174385132789612, -0.4477562525868416), 4), ((2.171000657081604, -0.448974848985672), 5), ((2.1673742747306823, -0.44696110367774966), 6), ((2.1650640773773193, -0.4470551723241806), 7), ((2.161759202480316, -0.44935131758451463), 8), ((2.1618394684791564, -0.4504289495944977), 9), ((2.1642303752899172, -0.4514125129580498), 10), ((2.168098886013031, -0.45666095584630967), 11), ((2.1692543172836305, -0.4566138106584549), 12), ((2.1692543172836305, -0.4566138106584549), 13), ((2.1692543172836305, -0.4566138106584549), 14), ((1.9107463598251342, -0.9167691367864609), 15), ((1.9036685395240784, -0.917080056667328), 16), ((1.9036685395240784, -0.917080056667328), 17), ((1.9095667600631714, -0.9168209660053254), 18), ((1.912891036272049, -0.913312709927559), 19)], [((1.9037396037578582, -0.9181979048252106), 0), ((1.9037396037578582, -0.9181979048252106), 1), ((1.9037396037578582, -0.9181979048252106), 2), ((1.9101810610294343, -0.870915688276291), 3), ((1.9101810610294343, -0.870915688276291), 4), ((1.9101810610294343, -0.870915688276291), 5), ((1.9101810610294343, -0.870915688276291), 6), ((1.9095667600631714, -0.9168209660053254), 7), ((1.9060278499126435, -0.9169763982295991), 8), ((1.9059567856788635, -0.915858605504036), 9), ((1.9095667600631714, -0.9168209660053254), 10), ((1.9095667600631714, -0.9168209660053254), 11), ((1.9095667600631714, -0.9168209660053254), 12), ((1.9095667600631714, -0.9168209660053254), 13), ((1.9095667600631714, -0.9168209660053254), 14), ((2.164712636470795, -0.45788057774305346), 15), ((2.164712636470795, -0.45788057774305346), 16), ((2.164712636470795, -0.45788057774305346), 17), ((2.164712636470795, -0.45788057774305346), 18), ((2.164712636470795, -0.45788057774305346), 19)]], 
             8: [[((0.7917167061567307, -0.634108201920986), 0), ((1.9359178876876832, -0.426067782253027), 1), ((1.936260681152344, -0.4205170114934442), 2), ((1.9359178876876832, -0.426067782253027), 3), ((1.9361462688446045, -0.4223684093952178), 4), ((1.9394090151786805, -0.42008547088503834), 5), ((1.9394090151786805, -0.42008547088503834), 6), ((1.936260681152344, -0.4205170114934442), 7), ((1.936260681152344, -0.4205170114934442), 8), ((1.936260681152344, -0.4205170114934442), 9), ((1.936260681152344, -0.4205170114934442), 10), ((1.936260681152344, -0.4205170114934442), 11), ((0.7685196661949159, -0.6842393902540205), 12), ((0.7538521635532379, -0.6862151644229888), 13), ((0.7501750606298447, -0.6918815115690231), 14), ((1.936260681152344, -0.4205170114934442), 15), ((1.936260681152344, -0.4205170114934442), 16), ((0.7489722347259522, -0.6834201005697249), 17), ((0.7523859232664108, -0.6864126697778699), 18), ((0.7562730592489243, -0.6927826193571089), 19)], [((1.9359178876876832, -0.426067782253027), 0), ((0.793197580575943, -0.6339071488976478), 1), ((0.793197580575943, -0.6339071488976478), 2), ((0.8012856549024582, -0.6380709753036498), 3), ((0.7951370465755463, -0.6371523786187172), 4), ((0.7894480830430984, -0.6396768218874929), 5), ((1.374346139431, -1.543113127708435), 6), ((0.6211696404218674, -2.3149480900764465), 7), ((0.783679518699646, -0.6526953793168069), 8), ((0.7835952615737916, -0.6631537119150162), 9), ((0.7857610577344895, -0.6680706140995025), 10), ((0.7780957102775574, -0.6777657822370529), 11), ((1.9394090151786805, -0.42008547088503834), 12), ((1.939293715953827, -0.42193713209033), 13), ((1.936260681152344, -0.4205170114934442), 14), ((0.7487104278802872, -0.6920786288976668), 15), ((0.749694351553917, -0.6884999183416367), 16), ((1.936260681152344, -0.4205170114934442), 17), ((1.9378347373008729, -0.4203012550473213), 18), ((2.1035325837135317, -0.2192110626064241), 19)], [((1.3742982459068298, -1.541887962579727), 0), ((2.098464961051941, -0.22187856283411378), 1), ((1.3744419264793397, -1.545561573266983), 2), ((1.3768751835823059, -1.5428257665634155), 3), ((1.374346139431, -1.543113127708435), 4), ((1.374346139431, -1.543113127708435), 5), ((0.6246563333272934, -2.320817042350769), 6), ((1.373081728219986, -1.5432568082809448), 7), ((1.3719143235683442, -1.5458486018180846), 8), ((0.6082351738214493, -2.3099877843856813), 9), ((0.6055620610713959, -2.303110629081726), 10), ((0.6151730829477311, -2.30752437210083), 11), ((0.6193702518939972, -2.307112620830536), 12), ((0.6172715842723847, -2.3073183856010435), 13), ((0.616222305893898, -2.3074214897155763), 14), ((0.6078653293848038, -2.3037782559394837), 15), ((0.613074803352356, -2.3077303586006166), 16), ((0.6078653293848038, -2.3037782559394837), 17), ((0.6134778517484665, -2.30947359418869), 18), ((1.9516498017311097, -0.42391344672441456), 19)], [((-0.06395146250724792, -1.4945253691673277), 0), ((1.374346139431, -1.543113127708435), 1), ((-0.06661244481801987, -1.4948186061382294), 2), ((0.6097035205364227, -2.3346405324935913), 3), ((0.6156012976169587, -2.327893310546875), 4), ((0.622314539551735, -2.3245864400863647), 5), ((0.7874148809909821, -0.6469515932202339), 6), ((2.098464961051941, -0.22187856283411378), 7), ((0.6151730829477311, -2.30752437210083), 8), ((2.098464961051941, -0.22187856283411378), 9), ((2.0970026564598085, -0.2201317882388829), 10), ((2.0970026564598085, -0.2201317882388829), 11), ((-0.026813387870788574, -1.5647388277053833), 12), ((2.101729037761688, -0.22141848843917256), 13), ((1.3727833914756775, -1.5677726385593413), 14), ((2.0989749383926393, -0.21594398735463605), 15), ((2.0986348056793216, -0.21990163151547293), 16), ((2.098464961051941, -0.22187856283411378), 17), ((2.101729037761688, -0.22141848843917256), 18), ((0.6166240793466569, -2.3091649470329285), 19)], [((2.101387574672699, -0.22536915159225446), 0), ((-0.07060732692480087, -1.491357412099838), 1), ((0.6098299616575241, -2.3442881951332093), 2), ((2.1018999910354617, -0.21944126783311368), 3), ((2.101729037761688, -0.22141848843917256), 4), ((-0.06705984473228455, -1.4818379089832305), 5), ((2.1000968885421756, -0.22164853429794285), 6), ((0.7815061283111573, -0.6477521744966506), 7), ((-0.06218353658914566, -1.5034117243289946), 8), ((1.3749669814109804, -1.5589846203327178), 9), ((1.3800091052055359, -1.558413556575775), 10), ((1.3738503527641297, -1.5627751932144165), 11), ((1.3726391565799714, -1.56413228726387), 12), ((1.3740414834022523, -1.5676303992271423), 13), ((-0.025989597663283348, -1.570950795173645), 14), ((1.3741369378566743, -1.570054454565048), 15), ((1.3741369378566743, -1.570054454565048), 16), ((1.3728795111179353, -1.5701964721679686), 17), ((1.3716220843791962, -1.5703386006355284), 18), ((1.374232281446457, -1.5724759600162506), 19)], [((0.6009983736276627, -2.3608540329933168), 0), ((0.6054376155138016, -2.3482167944908143), 1), ((1.9478832864761353, -0.9876195333003996), 2), ((-0.0692819207906723, -1.4833894596099853), 3), ((-0.06528131663799286, -1.4829475531578062), 4), ((2.1030186152458192, -0.22513937769830195), 5), ((1.9474174332618714, -0.9740951559543609), 6), ((-0.06395146250724792, -1.4945253691673277), 7), ((2.101387574672699, -0.22536915159225446), 8), ((-0.05118417739868164, -1.5266890857219695), 9), ((-0.045103803277015686, -1.547730750799179), 10), ((-0.03281942382454872, -1.5476626799106596), 11), ((2.1033611869812012, -0.2211884269900617), 12), ((-0.02336742915213108, -1.5706663165092467), 13), ((2.1018999910354617, -0.21944126783311368), 14), ((-0.026537826284766197, -1.584815859556198), 15), ((-0.0287260040640831, -1.5863036630153655), 16), ((-0.03787177801132202, -1.5872927973270416), 17), ((-0.027448706328868866, -1.589915078639984), 18), ((-0.03442830219864845, -1.5931655189990996), 19)], [((1.9476697611808778, -0.9906552288532255), 0), ((1.9472435975074769, -0.9967164758443832), 1), ((2.1012168431282046, -0.2273425976037977), 2), ((1.9474174332618714, -0.9740951559543609), 3), ((1.9487396049499512, -0.9754427156448364), 4), ((1.9488469219207765, -0.9739168301820753), 5), ((-0.07238942384719849, -1.486342561006546), 6), ((1.9490617775917054, -0.9708623985052107), 7), ((1.9488469219207765, -0.9739168301820753), 8), ((1.9488469219207765, -0.9739168301820753), 9), ((1.9488469219207765, -0.9739168301820753), 10), ((1.9490617775917054, -0.9708623985052107), 11), ((1.9488469219207765, -0.9739168301820753), 12), ((1.9488469219207765, -0.9739168301820753), 13), ((1.9488469219207765, -0.9739168301820753), 14), ((1.9488469219207765, -0.9739168301820753), 15), ((1.9488469219207765, -0.9739168301820753), 16), ((1.9487396049499512, -0.9754427156448364), 17), ((1.9487396049499512, -0.9754427156448364), 18), ((1.9488469219207765, -0.9739168301820753), 19)]], 
             9: [[((0.9214170163869859, -0.7783749222755434), 0), ((0.9214170163869859, -0.7783749222755434), 1), ((0.9191929793357849, -0.7781444668769839), 2), ((0.9169693386554718, -0.777914011478424), 3), ((0.9169693386554718, -0.777914011478424), 4), ((0.917468143105507, -0.7671768069267273), 5), ((0.9155828899145126, -0.7598113536834719), 6), ((0.911319581270218, -0.7557937264442445), 7), ((2.180703639984131, 1.1043181717395782), 8), ((0.9062271779775619, -0.7232604622840881), 9), ((0.9070813006162644, -0.7057109832763673), 10), ((0.903035826086998, -0.6982771873474123), 11), ((0.9035523539781571, -0.68782354593277), 12), ((0.8953298097848892, -0.6765304803848267), 13), ((2.180703639984131, 1.1043181717395782), 14), ((2.180703639984131, 1.1043181717395782), 15), ((0.8784290647506714, -0.6644134402275088), 16), ((0.8718986845016481, -0.6637611269950869), 17), ((0.8718986845016481, -0.6637611269950869), 18), ((0.8827842748165131, -0.6648484945297244), 19)], [((2.180703639984131, 1.1043181717395782), 0), ((2.180703639984131, 1.1043181717395782), 1), ((2.180703639984131, 1.1043181717395782), 2), ((2.1824355125427246, 1.104256373643875), 3), ((2.181138515472412, 1.102565187215805), 4), ((2.181138515472412, 1.102565187215805), 5), ((2.181138515472412, 1.102565187215805), 6), ((2.180703639984131, 1.1043181717395782), 7), ((0.9099553859233858, -0.7378259301185608), 8), ((2.180703639984131, 1.1043181717395782), 9), ((2.180703639984131, 1.1043181717395782), 10), ((2.180703639984131, 1.1043181717395782), 11), ((2.180703639984131, 1.1043181717395782), 12), ((2.180703639984131, 1.1043181717395782), 13), ((0.8911418682336807, -0.6726307630538941), 14), ((0.8871408438682558, -0.6652836561203004), 15), ((2.180703639984131, 1.1043181717395782), 16), ((2.1781046390533447, 1.1078812718391418), 17), ((2.1781046390533447, 1.1078812718391418), 18), ((2.1781046390533447, 1.1078812718391418), 19)], [((0.40378211796283736, 2.4734885692596436), 0), ((0.40378211796283736, 2.4734885692596436), 1), ((0.40378211796283736, 2.4734885692596436), 2), ((0.40378211796283736, 2.4734885692596436), 3), ((0.40476783573627473, 2.473497152328491), 4), ((0.40476783573627473, 2.473497152328491), 5), ((0.40476783573627473, 2.473497152328491), 6), ((0.40476783573627473, 2.473497152328491), 7), ((0.40476783573627473, 2.473497152328491), 8), ((0.40476783573627473, 2.473497152328491), 9), ((0.40476783573627473, 2.473497152328491), 10), ((0.40476783573627473, 2.473497152328491), 11), ((0.4053298330307007, 2.471841812133789), 12), ((0.4057536101341248, 2.473505735397339), 13), ((0.4057536101341248, 2.473505735397339), 14), ((1.299009153842926, 2.642010450363159), 15), ((1.299061814546585, 2.6404712200164795), 16), ((1.299061814546585, 2.6404712200164795), 17), ((1.300003252029419, 2.642024517059326), 18), ((1.30091694355011, 2.6443443298339844), 19)], [((1.884087324142456, 2.394117593765259), 0), ((1.8822659254074097, 2.396878480911255), 1), ((1.8836601972579956, 2.395963191986084), 2), ((1.809637427330017, 2.6306309700012207), 3), ((1.8851573467254639, 2.3894946575164795), 4), ((1.8163647651672363, 2.6299242973327637), 5), ((1.2573333597183227, 2.4844048023223877), 6), ((1.2563373363018036, 2.4818367958068848), 7), ((1.2573984777927398, 2.480992078781128), 8), ((1.8853716850280762, 2.388568639755249), 9), ((1.29893021941185, 2.6443159580230713), 10), ((1.29893021941185, 2.6443159580230713), 11), ((1.29893021941185, 2.6443159580230713), 12), ((1.2999766385555267, 2.6427934169769287), 13), ((1.300997463464737, 2.642038583755493), 14), ((0.4057536101341248, 2.473505735397339), 15), ((0.4057536101341248, 2.473505735397339), 16), ((0.4057536101341248, 2.473505735397339), 17), ((0.4057536101341248, 2.473505735397339), 18), ((0.4057536101341248, 2.473505735397339), 19)], [((1.8027757406234741, 2.636873245239258), 0), ((1.8026002645492554, 2.637660503387451), 1), ((1.8047764301300049, 2.6376891136169434), 2), ((1.883545994758606, 2.3913393020629883), 3), ((1.8161851167678833, 2.6307153701782227), 4), ((1.2583444452285768, 2.4861178398132324), 5), ((1.8196405172348022, 2.6299664974212646), 6), ((1.8169171810150146, 2.6323108673095703), 7), ((1.886555790901184, 2.3885748386383057), 8), ((1.2999235248565675, 2.6443302631378174), 9), ((1.2585265493392945, 2.476724624633789), 10), ((1.8901088237762451, 2.3885934352874756), 11), ((1.258559844493866, 2.475010395050049), 12), ((1.896467685699463, 2.386770009994507), 13), ((1.257577977180481, 2.4715678691864014), 14), ((1.2596579051017762, 2.472444772720337), 15), ((1.908850073814392, 2.389620065689087), 16), ((1.893012523651123, 2.391389846801758), 17), ((1.8795723915100098, 2.3931686878204346), 18), ((1.8717206716537476, 2.3912758827209473), 19)], [((1.2624839162826538, 2.4878573417663574), 0), ((1.257268581390381, 2.4878101348876953), 1), ((1.2562097048759462, 2.4886510372161865), 2), ((1.2573009705543519, 2.4861085414886475), 3), ((1.258327910900116, 2.486968994140625), 4), ((2.2445361614227295, -0.31553668975830096), 5), ((2.2445361614227295, -0.31553668975830096), 6), ((2.07244873046875, -0.5315515577793124), 7), ((2.066617012023926, -0.5244124829769135), 8), ((1.257430980205536, 2.479282855987549), 9), ((2.07244873046875, -0.5315515577793124), 10), ((1.2585265493392945, 2.476724624633789), 11), ((1.8940966129302979, 2.3867576122283936), 12), ((1.2596579051017762, 2.472444772720337), 13), ((2.2468504905700684, -0.3157213866710662), 14), ((2.2445361614227295, -0.31553668975830096), 15), ((1.2586097872257234, 2.47243595123291), 16), ((1.2533698773384094, 2.472391366958618), 17), ((2.0713753700256348, -0.5248253822326663), 18), ((2.0713753700256348, -0.5248253822326663), 19)], [((2.0737550258636475, -0.5250318586826324), 0), ((2.0761349201202393, -0.5252383887767791), 1), ((2.2457685470581055, -0.321808284521103), 2), ((2.2457685470581055, -0.321808284521103), 3), ((2.2457685470581055, -0.321808284521103), 4), ((1.886555790901184, 2.3885748386383057), 5), ((2.07244873046875, -0.5315515577793124), 6), ((2.2468504905700684, -0.3157213866710662), 7), ((2.2468504905700684, -0.3157213866710662), 8), ((2.2468504905700684, -0.3157213866710662), 9), ((2.2445361614227295, -0.31553668975830096), 10), ((2.2422220706939697, -0.3153520464897155), 11), ((2.2422220706939697, -0.3153520464897155), 12), ((1.8442155122756958, 2.632664680480957), 13), ((1.872010588645935, 2.3847851753234863), 14), ((1.9055142402648926, 2.38867449760437), 15), ((2.2468504905700684, -0.3157213866710662), 16), ((2.2473137378692627, -0.3065230190753936), 17), ((2.248547315597534, -0.3127748727798463), 18), ((2.2514803409576416, -0.31609083414077777), 19)], [((2.2457685470581055, -0.321808284521103), 0), ((2.2457685470581055, -0.321808284521103), 1), ((2.0737550258636475, -0.5250318586826324), 2), ((2.0761349201202393, -0.5252383887767791), 3), ((2.0761349201202393, -0.5252383887767791), 4), ((1.2968664860725403, 2.646589517593384), 5), ((1.886555790901184, 2.3885748386383057), 6), ((1.8882784843444824, 2.391364574432373), 7), ((1.8216437101364136, 2.6307859420776367), 8), ((2.07244873046875, -0.5315515577793124), 9), ((1.889998435974121, 2.3941497802734375), 10), ((2.07244873046875, -0.5315515577793124), 11), ((2.07244873046875, -0.5315515577793124), 12), ((2.2445361614227295, -0.31553668975830096), 13), ((2.07244873046875, -0.5315515577793124), 14), ((1.849680781364441, 2.63273549079895), 15), ((1.8529608249664307, 2.6327781677246094), 16), ((2.0713753700256348, -0.5248253822326663), 17), ((1.2501982307434083, 2.474081039428711), 18), ((1.248104373216629, 2.4740631580352783), 19)], [((1.3016673302650452, 2.651254653930664), 0), ((1.2969179010391236, 2.6450552940368652), 1), ((1.2958231246471406, 2.6481077671051025), 2), ((1.2958740866184235, 2.6465752124786377), 3), ((1.2958740866184235, 2.6465752124786377), 4), ((2.074831247329712, -0.5317587852478027), 5), ((1.2969179010391236, 2.6450552940368652), 6), ((1.3007029032707216, 2.65047550201416), 7), ((1.2979108667373658, 2.6450695991516113), 8), ((1.8205517530441284, 2.6307718753814697), 9), ((1.8194600343704224, 2.6307578086853027), 10), ((1.8338297605514526, 2.6349072456359863), 11), ((1.840751051902771, 2.6334128379821777), 12), ((2.07244873046875, -0.5315515577793124), 13), ((1.8560512065887451, 2.6336114406585693), 14), ((2.07244873046875, -0.5315515577793124), 15), ((2.07244873046875, -0.5315515577793124), 16), ((1.8544342517852783, 2.631209373474121), 17), ((1.8741412162780762, 2.6314637660980225), 18), ((1.879508376121521, 2.6275532245635986), 19)], [((2.1150639057159424, -1.0054632902145388), 0), ((2.117642879486084, -1.0057255029678345), 1), ((2.1991593837738037, 2.3174614906311035), 2), ((2.2016279697418213, 2.3174688816070557), 3), ((2.1143064498901367, -1.0170325160026552), 4), ((2.119474172592163, -1.017559838294983), 5), ((2.119474172592163, -1.017559838294983), 6), ((2.1200859546661377, -1.0215144872665407), 7), ((2.1168899536132812, -1.0172962307929994), 8), ((2.1200859546661377, -1.0215144872665407), 9), ((2.1168899536132812, -1.0172962307929994), 10), ((2.114915132522583, -1.0209863066673281), 11), ((2.114915132522583, -1.0209863066673281), 12), ((2.114915132522583, -1.0209863066673281), 13), ((2.114915132522583, -1.0209863066673281), 14), ((2.114915132522583, -1.0209863066673281), 15), ((2.114915132522583, -1.0209863066673281), 16), ((2.114915132522583, -1.0209863066673281), 17), ((2.1143064498901367, -1.0170325160026552), 18), ((2.1143064498901367, -1.0170325160026552), 19)], [((2.1995015144348145, 2.312563419342041), 0), ((2.1988444328308105, 2.318438768386841), 1), ((2.1150639057159424, -1.0054632902145388), 2), ((2.1156718730926514, -1.0094027042388918), 3), ((2.2004497051239014, 2.309619665145874), 4), ((2.2004497051239014, 2.309619665145874), 5), ((2.201399326324463, 2.306670665740967), 6), ((2.2004497051239014, 2.309619665145874), 7), ((2.2004497051239014, 2.309619665145874), 8), ((2.2001333236694336, 2.3106014728546143), 9), ((2.1995015144348145, 2.312563419342041), 10), ((2.200737714767456, 2.3125669956207275), 11), ((2.2001333236694336, 2.3106014728546143), 12), ((2.2001333236694336, 2.3106014728546143), 13), ((2.2004215717315674, 2.313546895980835), 14), ((2.1995015144348145, 2.312563419342041), 15), ((2.200737714767456, 2.3125669956207275), 16), ((2.2004215717315674, 2.313546895980835), 17), ((2.2001333236694336, 2.3106014728546143), 18), ((2.200737714767456, 2.3125669956207275), 19)], [((0.13240896439179783, -1.2574191689491272), 3), ((0.13240896439179783, -1.2574191689491272), 4), ((0.13702379208058124, -1.2579884409904483), 5), ((0.13702379208058124, -1.2579884409904483), 6), ((0.13702379208058124, -1.2579884409904483), 7), ((0.13702379208058124, -1.2579884409904483), 8), ((0.13702379208058124, -1.2579884409904483), 9), ((0.13702379208058124, -1.2579884409904483), 10), ((0.13702379208058124, -1.2579884409904483), 11), ((0.13702379208058124, -1.2579884409904483), 12), ((0.13702379208058124, -1.2579884409904483), 13), ((0.13702379208058124, -1.2579884409904483), 14), ((0.13702379208058124, -1.2579884409904483), 15)]]
             }

# def test_batch_to_world_coords(sample_paths_cam17):
#     mapper = Mapper(config.MAPPINGS, config.RESOLUTION, config.DISTORTION)
#     irl_paths = mapper.batch_to_world_coords(sample_paths_cam17, 9)

#     print(f"Translated paths from cam 17 : {irl_paths}")

#     assert len(irl_paths) == 3
#     assert len(irl_paths[0]) == 11


# def test_batch_match(sample_paths_cam5, sample_paths_cam7, sample_paths_cam17):
#     mapper = Mapper(config.MAPPINGS, config.RESOLUTION, config.DISTORTION)
#     multi_tracker = MultiTracker(config.NUM_CAMERAS, config.FIRST_CAMERA, mapper, config.CLUSTER_EPSILON, config.CLUSTER_MIN_SAMPLES, config.MAX_GLOBAL_AGE, config.MAX_CLUSTER_DISTANCE, config.FRECHET_THRESHOLD, config.BATCH_SIZE, config.CAM_FULLY_OVERLAPPED, False)

#     # Translate paths to global coords
#     global_paths_cam5 = mapper.batch_to_world_coords(sample_paths_cam5, 5)
#     global_paths_cam7 = mapper.batch_to_world_coords(sample_paths_cam7, 7)
#     global_paths_cam17 = mapper.batch_to_world_coords(sample_paths_cam17, 9)

#     # batch match paths from cam 5 and 7, static pig from 7 should be discarded and moving pig paths should be merged
#     paths_7_17 = multi_tracker.batch_match(global_paths_cam7, global_paths_cam17, 7, 9)
#     print(f"COMBINED PATHS FROM CAM 7 AND 17 :\n{paths_7_17}\n")
#     assert len(paths_7_17) == 3

#     print("\n\n\n")

#     paths_5_7_17 = multi_tracker.batch_match(global_paths_cam5, paths_7_17, 5, None)
#     print(f"COMBINED PATHS FROM CAMS 5, 7, 17 :{paths_5_7_17}")

#     assert len(paths_5_7_17) == 3

def test_batch_match_v2(raw_paths):
    mapper = Mapper(config.MAPPINGS, config.RESOLUTION, config.DISTORTION)
    multi_tracker = MultiTracker(config.NUM_CAMERAS, config.FIRST_CAMERA, mapper, config.CLUSTER_EPSILON, config.CLUSTER_MIN_SAMPLES, config.MAX_GLOBAL_AGE, config.MAX_CLUSTER_DISTANCE, config.FRECHET_THRESHOLD, config.BATCH_SIZE, config.CAM_FULLY_OVERLAPPED, False)
    drawer = Drawer()
    # unbiased_paths = mapper.fix_paths_bias(raw_paths, config.THALES_SCALE, config.CAM_POSITIONS)
    clean_paths = multi_tracker.handle_outliers(config.MAX_PIG_MVMT_BETWEEN_TWO_FRAMES, raw_paths)
    
    # for cam_id in [5,6,7,8,9]:
    #     drawer.display_plot_batch(clean_paths[cam_id], cam_id, 20)

    paths_7_17 = multi_tracker.batch_match(clean_paths[7], clean_paths[9], 7, 17)  # Match batch paths across cameras
    print(f"\npath 7 ({len(clean_paths[7])} paths): {clean_paths[7]}\npath 17({len(clean_paths[9])} paths): {clean_paths[9]}\n")
    print(f"\npath_7_17({len(paths_7_17)} paths) : {paths_7_17}\n")
    drawer.display_plot_batch(paths_7_17, '7_17', 20)

    # paths_8_7_17 = multi_tracker.batch_match(clean_paths[8], paths_7_17, 8, None)
    # print(f"\n\npath 8_7_17 : {paths_8_7_17}")
    # drawer.display_plot_batch(paths_8_7_17, '8_7_17', 20)

    # paths_5_7_8_17 = multi_tracker.batch_match(clean_paths[5], paths_8_7_17, 5, None)
    # print(f"\n\npaths 5_7_8_17 : {paths_5_7_8_17}")
    # drawer.display_plot_batch(paths_5_7_8_17, '5_7_8_17', 20)

    # all_paths_merged = multi_tracker.batch_match(clean_paths[6], paths_5_7_8_17, 6, None)
    # print(f"\n\nall paths : {all_paths_merged}")
    # drawer.display_plot_batch(all_paths_merged, 'overall', 20)

def test_merge_paths():
    pass

def test_no_batch_size():
    pass

def test_pig_in_corner_detected():
    pass
